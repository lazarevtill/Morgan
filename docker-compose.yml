services:
  # LLM Service with OpenAI compatibility (Client to external Ollama)
  llm-service:
    build:
      context: .
      dockerfile: services/llm/Dockerfile
      tags:
        - morgan-llm:latest
    image: morgan-llm:latest
    container_name: morgan-llm
    restart: unless-stopped
    ports:
      - "8001:8001"
    volumes:
      - ./config:/app/config:ro
      - ./logs/llm:/app/logs
    environment:
      - MORGAN_CONFIG_DIR=/app/config
      - PYTHONPATH=/app
      - OLLAMA_BASE_URL=http://host.docker.internal:11434
    networks:
      - morgan-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # TTS Service with CUDA support
  tts-service:
    build:
      context: .
      dockerfile: services/tts/Dockerfile
      tags:
        - morgan-tts:latest
    image: morgan-tts:latest
    container_name: morgan-tts
    restart: unless-stopped
    ports:
      - "8002:8002"
    volumes:
      - ./config:/app/config:ro
      - ./data/models/tts:/app/data/models
      - ./data/voices:/app/data/voices
      - ./logs/tts:/app/logs
    environment:
      - MORGAN_CONFIG_DIR=/app/config
      - CUDA_VISIBLE_DEVICES=0
      - PYTHONPATH=/app
      - LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    networks:
      - morgan-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # STT Service with CUDA support and Silero VAD
  stt-service:
    build:
      context: .
      dockerfile: services/stt/Dockerfile
      tags:
        - morgan-stt:latest
    image: morgan-stt:latest
    container_name: morgan-stt
    restart: unless-stopped
    ports:
      - "8003:8003"
    volumes:
      - ./config:/app/config:ro
      - ./data/models/stt:/app/data/models
      - ./logs/stt:/app/logs
    environment:
      - MORGAN_CONFIG_DIR=/app/config
      - CUDA_VISIBLE_DEVICES=0
      - PYTHONPATH=/app
      - LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH
      - RUST_BACKTRACE=1
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    networks:
      - morgan-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Core orchestration service
  core:
    build:
      context: .
      dockerfile: core/Dockerfile
      tags:
        - morgan-core:latest
    image: morgan-core:latest
    container_name: morgan-core
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./config:/app/config
      - ./data:/app/data
      - ./logs/core:/app/logs
    environment:
      - MORGAN_CONFIG_DIR=/app/config
      - PYTHONPATH=/app
    depends_on:
      llm-service:
        condition: service_healthy
      tts-service:
        condition: service_healthy
      stt-service:
        condition: service_healthy
    networks:
      - morgan-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s

networks:
  morgan-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

