services:
  # LLM Service with OpenAI compatibility (Client to external Ollama)
  llm-service:
    build:
      context: .
      dockerfile: services/llm/Dockerfile
      tags:
        - morgan-llm:latest
    image: morgan-llm:latest
    container_name: morgan-llm
    restart: unless-stopped
    ports:
      - "8001:8001"
    volumes:
      - ./config:/app/config:ro
      - ./data/models/torch_hub:/root/.cache/torch:hub
      - ./data/models/transformers:/app/data/models/transformers
      - ./data/models/huggingface:/app/data/models/huggingface
      - ./logs/llm:/app/logs
    environment:
      - MORGAN_CONFIG_DIR=/app/config
      - PYTHONPATH=/app
      - OLLAMA_BASE_URL=https://gpt.lazarev.cloud/ollama/v1
      - MORGAN_LLM_API_KEY=${MORGAN_LLM_API_KEY:-}
    networks:
      - morgan-net
    healthcheck:
      test: ["CMD", "curl", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # TTS Service with CUDA support
  tts-service:
    build:
      context: .
      dockerfile: services/tts/Dockerfile
      tags:
        - morgan-tts:latest
    image: morgan-tts:latest
    container_name: morgan-tts
    restart: unless-stopped
    ports:
      - "8002:8002"
    volumes:
      - ./config:/app/config:ro
      - ./data/models/tts:/app/data/models
      - ./data/models/torch_hub:/root/.cache/torch:hub
      - ./data/models/transformers:/app/data/models/transformers
      - ./data/models/huggingface:/app/data/models/huggingface
      - ./data/voices:/app/data/voices
      - ./logs/tts:/app/logs
    environment:
      - MORGAN_CONFIG_DIR=/app/config
      - CUDA_VISIBLE_DEVICES=0
      - PYTHONPATH=/app
      - LD_LIBRARY_PATH=/usr/local/cuda/lib64:/usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    networks:
      - morgan-net
    healthcheck:
      test: ["CMD", "curl", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # STT Service with CUDA support and Silero VAD
  stt-service:
    build:
      context: .
      dockerfile: services/stt/Dockerfile
      tags:
        - morgan-stt:latest
    image: morgan-stt:latest
    container_name: morgan-stt
    restart: unless-stopped
    ports:
      - "8003:8003"
    volumes:
      - ./config:/app/config:ro
      - ./data/models/stt:/app/data/models
      - ./data/models/torch_hub:/root/.cache/torch:hub
      - ./data/models/transformers:/app/data/models/transformers
      - ./data/models/huggingface:/app/data/models/huggingface
      - ./logs/stt:/app/logs
    environment:
      - MORGAN_CONFIG_DIR=/app/config
      - CUDA_VISIBLE_DEVICES=0
      - PYTHONPATH=/app
      - LD_LIBRARY_PATH=/usr/local/cuda/lib64:/usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH
      - RUST_BACKTRACE=1
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    networks:
      - morgan-net
    healthcheck:
      test: ["CMD", "curl", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # PostgreSQL database for structured memory and persistence
  postgres:
    image: harbor.in.lazarev.cloud/proxy/postgres:17-alpine
    container_name: morgan-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d:ro
    environment:
      - POSTGRES_DB=morgan
      - POSTGRES_USER=morgan
      - POSTGRES_PASSWORD=morgan_secure_password
    networks:
      - morgan-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U morgan -d morgan"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Qdrant vector database for semantic memory search
  qdrant:
    image: harbor.in.lazarev.cloud/proxy/qdrant/qdrant:latest
    container_name: morgan-qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"  # HTTP API
      - "6334:6334"  # gRPC API
    volumes:
      - qdrant-data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    networks:
      - morgan-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Core orchestration service
  core:
    build:
      context: .
      dockerfile: core/Dockerfile
      tags:
        - morgan-core:latest
    image: morgan-core:latest
    container_name: morgan-core
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./config:/app/config
      - ./data:/app/data
      - ./data/models/torch_hub:/root/.cache/torch:hub
      - ./data/models/transformers:/app/data/models/transformers
      - ./data/models/huggingface:/app/data/models/huggingface
      - ./data/models/sentence_transformers:/app/data/models/sentence_transformers
      - ./logs/core:/app/logs
    environment:
      - MORGAN_CONFIG_DIR=/app/config
      - PYTHONPATH=/app
      - BEHIND_PROXY=true
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=morgan
      - POSTGRES_USER=morgan
      - POSTGRES_PASSWORD=morgan_secure_password
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - QDRANT_GRPC_PORT=6334
      - MORGAN_EXTERNAL_LLM_API_BASE=https://gpt.lazarev.cloud/ollama/v1
      - MORGAN_EXTERNAL_LLM_API_KEY=${MORGAN_LLM_API_KEY:-}
      - MORGAN_EMBEDDING_MODEL=qwen3-embedding:latest
    depends_on:
      postgres:
        condition: service_healthy
      qdrant:
        condition: service_healthy
      llm-service:
        condition: service_healthy
      tts-service:
        condition: service_healthy
      stt-service:
        condition: service_healthy
    networks:
      - morgan-net
    healthcheck:
      test: ["CMD", "curl", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s

networks:
  morgan-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres-data:
    driver: local
  qdrant-data:
    driver: local

