# Multi-stage base Dockerfile for Morgan services (CPU-only)
# This base image contains common Python dependencies for all services

# Stage 1: Base Python environment with uv
FROM harbor.in.lazarev.cloud/proxy/python:3.12-slim AS base

# Configure apt to use Nexus proxy repositories (Debian-based)
RUN echo 'deb https://nexus.in.lazarev.cloud/repository/debian-proxy/ trixie main' > /etc/apt/sources.list && \
    echo 'deb https://nexus.in.lazarev.cloud/repository/debian-proxy/ trixie-updates main' >> /etc/apt/sources.list && \
    echo 'deb https://nexus.in.lazarev.cloud/repository/debian-security/ trixie-security main' >> /etc/apt/sources.list

# Install common system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Install uv (ultra-fast Python package manager)
COPY --from=ghcr.io/astral-sh/uv:latest /uv /usr/local/bin/uv

# Configure UV to use system Python and Nexus PyPI proxy
ENV UV_INDEX_URL=https://nexus.in.lazarev.cloud/repository/pypi-proxy/simple \
    UV_COMPILE_BYTECODE=1 \
    UV_LINK_MODE=copy \
    UV_NO_CREATE_VENV=1

# Stage 2: Common Python dependencies
FROM base AS python-deps

WORKDIR /app

# Copy pyproject.toml and install common dependencies
COPY pyproject.toml .
RUN uv pip install --system \
    fastapi \
    uvicorn[standard] \
    pydantic \
    aiohttp \
    pyyaml \
    python-dotenv \
    structlog \
    psutil \
    redis \
    python-multipart

# Stage 3: Application build (shared utilities)
FROM python-deps AS build

WORKDIR /app

# Copy shared utilities
COPY shared/ ./shared/

# Final stage: Runtime base
FROM build AS runtime

WORKDIR /app

# Set common environment variables
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1