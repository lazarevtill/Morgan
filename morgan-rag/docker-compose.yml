version: '3.8'

services:
  morgan:
    build: .
    container_name: morgan-rag
    ports:
      - "8080:8080"
      - "8000:8000"  # API port
    environment:
      # LLM Configuration
      - LLM_BASE_URL=https://gpt.lazarev.cloud/ollama/v1
      - LLM_API_KEY=${LLM_API_KEY}
      - LLM_MODEL=${LLM_MODEL:-llama3.1:8b}
      
      # Vector Database
      - QDRANT_URL=http://qdrant:6333
      - QDRANT_API_KEY=${QDRANT_API_KEY:-}
      
      # Embedding Service
      - EMBEDDING_MODEL=${EMBEDDING_MODEL:-all-MiniLM-L6-v2}
      - EMBEDDING_BATCH_SIZE=${EMBEDDING_BATCH_SIZE:-100}
      - EMBEDDING_DEVICE=${EMBEDDING_DEVICE:-cpu}
      
      # System Settings
      - MORGAN_DATA_DIR=/app/data
      - MORGAN_LOG_LEVEL=${MORGAN_LOG_LEVEL:-INFO}
      - MORGAN_MAX_CONTEXT=${MORGAN_MAX_CONTEXT:-8192}
      - MORGAN_DEBUG=${MORGAN_DEBUG:-false}
      
      # Performance
      - MORGAN_WORKERS=${MORGAN_WORKERS:-4}
      - MORGAN_CACHE_SIZE=${MORGAN_CACHE_SIZE:-1000}
      
      # Security
      - MORGAN_API_KEY=${MORGAN_API_KEY:-}
      - MORGAN_CORS_ORIGINS=${MORGAN_CORS_ORIGINS:-*}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config:/app/config
      - ./knowledge:/app/knowledge  # Mount for document ingestion
    depends_on:
      - qdrant
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-m", "morgan", "health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  qdrant:
    image: qdrant/qdrant:latest
    container_name: morgan-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"  # gRPC port
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
      - QDRANT__LOG_LEVEL=${QDRANT_LOG_LEVEL:-INFO}
    volumes:
      - qdrant_data:/qdrant/storage
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:latest
    container_name: morgan-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:latest
    container_name: morgan-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - morgan
    restart: unless-stopped
    profiles:
      - production

  # Optional: Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: morgan-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    profiles:
      - monitoring

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: morgan-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    restart: unless-stopped
    profiles:
      - monitoring

volumes:
  qdrant_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  default:
    name: morgan-network
    driver: bridge